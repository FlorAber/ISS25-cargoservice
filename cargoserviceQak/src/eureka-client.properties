# ================================================================================
# Eureka Client Configuration for BasicRobot25
# ================================================================================
# 
#----------------------------------------------------------------------------------------------------
# COPIED IN src IN ORDER TO ALLOW ECLIPSE RUN-AS ACTIVATION OF ProductServiceDiscoverCallerTcp
# OTHERWISE USE gradlew runCaller
#----------------------------------------------------------------------------------------------------

# This file configures the Eureka client for service discovery in the BasicRobot25
# system. Eureka is a REST-based service registry for locating services for
# load balancing and failover of middle-tier servers.
# 
# Key features:
# - Service registration and discovery
# - Load balancing and failover support
# - Health monitoring and status reporting
# - Dynamic service location without hardcoded endpoints
# 
# @author Unibo BasicRobot25 Team
# @version 2025
# ================================================================================

# Eureka Server URLs - Multiple servers for high availability
# The client will try to connect to these Eureka servers in order
# Format: http://hostname:port/eureka/
eureka.serviceUrl.defaultZone=http://192.168.1.132:8761/eureka/, http://eureka:8761/eureka/, http://localhost:8761/eureka/
 
# Application name registered with Eureka
# This is the service name that other clients will use to discover this service
eureka.instance.appname=ctxbasicrobot

# ================================================================================
# Client Configuration Parameters
# ================================================================================

# Initial replication interval for instance info (seconds)
# How often the client sends its instance information to the Eureka server
eureka.client.initialInstanceInfoReplicationIntervalSeconds=10

# Registry fetch interval (seconds) - How often to fetch registry from server
# eureka.client.registryFetchIntervalSeconds=5

# Initial registry fetch interval (seconds) - Initial fetch delay
# eureka.client.initialRegistryFetchIntervalSeconds=5

# ================================================================================
# Instance Configuration
# ================================================================================

# Service port number
# The port on which this service will be available for other services
eureka.instance.nonSecurePort=8020

# Instance ID (can be configured dynamically)
# Unique identifier for this service instance
# eureka.instance.instanceId=eurekatest

# ================================================================================
# Registration and Discovery Settings
# ================================================================================

# Enable service registration with Eureka
# When true, this client will register itself with the Eureka server
eureka.client.registerWithEureka = true

# Enable registry fetching from Eureka
# When true, this client will fetch the registry from the Eureka server
eureka.client.fetchRegistry = true

# ================================================================================
# Lease Management
# ================================================================================

# Lease renewal interval (heartbeat) in seconds
# How often the client sends heartbeat to Eureka server
# Format: 60*10*6 = 3600 seconds (1 hour)
eureka.leaseRenewalIntervalInSeconds=60*10*6

# Lease expiration duration in seconds
# How long Eureka server waits before marking instance as unavailable
# Format: 60*10*6 = 3600 seconds (1 hour)
eureka.leaseExpirationDurationInSeconds=60*10*6