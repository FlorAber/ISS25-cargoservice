services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    networks:
      - cargoservice-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.10
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    command:
      [
        "bash",
        "-c",
        "wait-for-it.sh elasticsearch:9200 --timeout=60 -- logstash -f /usr/share/logstash/pipeline/logstash.conf",
      ]
    networks:
      - cargoservice-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    volumes:
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    depends_on:
      - elasticsearch
    command:
      ["bash", "-c", "wait-for-it.sh elasticsearch:9200 --timeout=60 -- kibana"]
    networks:
      - cargoservice-network

  mongodb:
    image: mongo:6.0.4
    container_name: mongodb
    mem_limit: 512m
    environment:
      - MONGO_INITDB_DATABASE=cargodb
    ports:
      - "27017:27017"
    command: mongod
    networks:
      - cargoservice-network

  mosquitto:
    image: eclipse-mosquitto:1.6.15
    container_name: mosquitto
    environment:
      - MQTT_ALLOW_ANONYMOUS=true
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - cargoservice-network

  eureka:
    image: natbodocker/springcloud-eureka
    container_name: eurekaserver
    ports:
      - "8761:8761"
    networks:
      - cargoservice-network
    volumes:
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    command:
      [
        "bash",
        "-c",
        "wait-for-it.sh mongodb:27017 --timeout=60 -- java -jar app.jar",
      ]

networks:
  cargoservice-network:
    external: true
